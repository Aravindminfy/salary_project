version: "3.9"

services:
  # PostgreSQL for data/ML tasks
  postgres-data:
    image: postgres:15
    container_name: postgres-data
    environment:
      POSTGRES_USER: datauser
      POSTGRES_PASSWORD: datapassword
      POSTGRES_DB: datadb
    ports:
      - "5433:5432"  # Avoid conflict with host PostgreSQL
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - mlops_net

  # Airflow DB initialization
  airflow-init:
    build: .
    image: my-airflow:2.7.1
    container_name: airflow-init
    command: >
      bash -c "airflow db migrate && airflow connections create-default-connections"
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
      AIRFLOW__CORE__FERNET_KEY: ODHFwM80s4NMKQ8NTTD_3gnSzP9bSo2BP200UjrQb2w=
    volumes:
      - ./airflow_data:/opt/airflow
    networks:
      - mlops_net

  # Airflow user creation
  airflow-create-user:
    build: .
    image: my-airflow:2.7.1
    container_name: airflow-create-user
    depends_on:
      - airflow-init
    command: >
      bash -c "
        airflow users create \
          --username admin \
          --password admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com
      "
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
      AIRFLOW__CORE__FERNET_KEY: ODHFwM80s4NMKQ8NTTD_3gnSzP9bSo2BP200UjrQb2w=
    volumes:
      - ./airflow_data:/opt/airflow
    networks:
      - mlops_net

  # Airflow web UI
  airflow-web:
    build: .
    image: my-airflow:2.7.1
    container_name: airflow-web
    depends_on:
      - airflow-create-user
    command: webserver
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
      AIRFLOW__CORE__FERNET_KEY: ODHFwM80s4NMKQ8NTTD_3gnSzP9bSo2BP200UjrQb2w=
    volumes:
      - ./airflow_data:/opt/airflow
      - ./dags:/opt/airflow/dags
      - ./mlflow-artifacts:/mlflow-artifacts           # <-- Added volume for MLflow artifacts
    networks:
      - mlops_net

  # Airflow scheduler
  airflow-scheduler:
    build: .
    image: my-airflow:2.7.1
    container_name: airflow-scheduler
    depends_on:
      - airflow-create-user
    command: scheduler
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
      AIRFLOW__CORE__FERNET_KEY: ODHFwM80s4NMKQ8NTTD_3gnSzP9bSo2BP200UjrQb2w=
    volumes:
      - ./airflow_data:/opt/airflow
      - ./dags:/opt/airflow/dags
      - ./mlflow-artifacts:/mlflow-artifacts           # <-- Added volume for MLflow artifacts
    networks:
      - mlops_net

  # MLflow tracking server
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.12.1
    container_name: mlflow
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri sqlite:///mlflow_data/mlflow.db --default-artifact-root /mlflow-artifacts
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow-artifacts:/mlflow-artifacts
      - ./mlflow_data:/mlflow_data
    networks:
      - mlops_net

networks:
  mlops_net:
    driver: bridge
